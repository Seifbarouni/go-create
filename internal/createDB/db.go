package createDB

import (
	"os"
	"strings"

	colorize "github.com/Seifbarouni/go-create/internal/colorizeText"
	h "github.com/Seifbarouni/go-create/internal/helpers"
)

// check if these packages are installed :
// - gorm.io/gorm
// - gorm.io/driver/postgres
func installNeededPackages() {
	colorize.PrintWithColor("Installing needed packages...\n", colorize.Cyan)
	// go get -u gorm.io/gorm
	h.ExecuteCommand("go", "get", "-u", "gorm.io/gorm")
	// go get -u gorm.io/driver/postgres
	h.ExecuteCommand("go", "get", "-u", "gorm.io/driver/postgres")
}

func CreateDB(fileName string) {
	installNeededPackages()
	
	wd, err := os.Getwd()
	if err != nil {
		panic(err)
	}
	// get the last string of the path
	arr:=strings.Split(wd, "\\")
	folderName := arr[len(arr)-1]

	h.CreateFile(fileName+".go", "//GENERATED BY go-create\npackage "+folderName+"\n\nimport (\n\t\"gorm.io/gorm\"\n\t\"gorm.io/driver/postgres\"\n)\n\nvar DB *gorm.DB = nil\n\nfunc InitializeDB() {\n\tdatabase, err := gorm.Open(postgres.Open(\"host=localhost port=5432 user=postgres dbname=postgres password=postgres sslmode=disable\"),&gorm.Config{})\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\t/*if err=database.AutoMigrate(&models.User{});err != nil{\n\t\tpanic(err)\n\t}*/\n\t DB = database\n}")

	colorize.PrintWithColor("\n"+fileName+".go file created\n", colorize.Green)
}
