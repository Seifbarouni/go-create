package createModel

import (
	"os"
	"strings"

	colorize "github.com/Seifbarouni/go-create/internal/colorizeText"
	h "github.com/Seifbarouni/go-create/internal/helpers"
)

func generateModelName(fileName string)string{
	// split the file name by " "
	arr:=strings.Split(fileName, " ")
	// for each word in the array capitalize the first letter
	for i:=0; i<len(arr); i++{
		arr[i]=strings.Title(arr[i])
	}
	// join the array to get the model name
	return strings.Join(arr, "")
}

func CreateModel(fileName string) {
	// check if the user has provided a valid file name
	if fileName == "" {
		colorize.PrintWithColor("You must provide a valid file name\n", colorize.Red)
		os.Exit(1)
	}
	// capitalize the first letter of the file name
	modelName := generateModelName(fileName)
	// check if the file name is valid
	if !strings.HasSuffix(fileName, ".go") {
		fileName += ".go"
	}

	// check if the file already exists
	if _, err := os.Stat(fileName); err == nil {
		colorize.PrintWithColor("The file already exists\n", colorize.Red)
		os.Exit(1)
	}

	wd, err := os.Getwd()
	if err != nil {
		panic(err)
	}
	// get the last string of the path
	arr:=strings.Split(wd, h.GetSeperator())
	folderName := arr[len(arr)-1]
	// generate struct with the model name
	h.CreateFile(fileName, "//GENERATED BY go-create\npackage "+folderName+"\n\ntype "+modelName+" struct{\n\t//Add your attributes here\n\tID\tint\n}")

	colorize.PrintWithColor("\n"+fileName+" file created\n", colorize.Green)

}